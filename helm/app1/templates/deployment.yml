{{- $global := .Values.global -}}
{{- range $app := .Values.services }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{- if or (eq $app.name "one") (eq $app.name "two") }} number-name {{- else }} {{ $app.name }} {{- end }}
  namespace: {{ $global.namespace }}
spec:
  replicas: {{ $app.replicas }}
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ $app.name }}
  template:
    metadata:
      labels:
        app: {{ $app.name }}
    spec:
      containers:
        - name: {{ $app.name }}
          image: {{ $app.image }}
          #imagePullPolicy: {{- if $app.pullPolicy }} {{ $app.pullPolicy }} {{- else }} Always {{- end }} # "Always", "IfNotPresent", "Never"
          imagePullPolicy: {{- if eq $app.pullPolicy "alw" }} Always {{- else }} IfNotPresent {{- end }}
          ports:
            - containerPort: 80
      #     volumeMounts:
      #     - name: test-html-vol
      #       mountPath: /app
      # volumes:
      #   - name: test-html-vol
      #     configMap:
      #       name: test-html
      #   - name: test-html-vol-2
      #     configMap:
      #       name: test-html-2
      # restartPolicy: Always
{{- end }}
